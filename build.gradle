import org.grails.gradle.plugin.tasks.GrailsTask

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'org.grails:grails-gradle-plugin:2.1.0'
		classpath 'com.moowork.gradle:gradle-node-plugin:0.6'
	}
}

project.ext {
	warFile = file("target/${project.warName}")
//	jasmineDependencies = ['karma', 'karma-jasmine@2_0', 'karma-phantomjs-launcher']
//	karmaExec = file('node_modules/karma/bin/karma')
//	karmaConfig = 'test/js/karma.conf.js'
}

apply plugin: 'grails'
apply plugin: 'com.moowork.node'

apply plugin: 'idea'
apply plugin: 'eclipse'

repositories {
	grails.central()
    flatDir {
        dirs 'lib'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

grails {
	grailsVersion = '2.4.4'
	groovyVersion = '2.3.7'
}

node {
	version = '0.11.13'
	distBaseUrl = 'http://nodejs.org/dist'
	download = true
	workDir = file("${project.buildDir}/nodejs")
}

clean {
	delete warFile
	delete file('node_modules')
}

war {
	outputFile = warFile
	env = 'production'
}

task debug(type: GrailsTask) {
        command = 'run-app'
        jvmOptions {
                jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,address=5005'
        }
}

task 'grails-compile'(type: GrailsTask) {
	command = 'compile'
}

tasks.withType(GrailsTask) {
	jvmOptions {
		minHeapSize = '256m'
		maxHeapSize = '512m'
		jvmArgs "-XX:MaxPermSize=512m" 
	}
}

dependencies {

compile fileTree(dir:'lib',include:'*.jar')
	springloaded 'org.springframework:springloaded:1.2.1.RELEASE@jar'
	
  	String gebVersion = '0.9.2'
	String seleniumVersion = '2.43.1'

	runtime 'mysql:mysql-connector-java:5.1.22'
	compile "org.eclipse.jgit:org.eclipse.jgit:3.5.1.201410131835-r"
	compile "commons-lang:commons-lang:2.6"
	compile "commons-logging:commons-logging:1.1.1"
	compile "commons-collections:commons-collections:3.2.1"




	test "org.grails:grails-datastore-test-support:1.0.2-grails-2.4"
	test "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
	test "org.gebish:geb-spock:$gebVersion"
	
    test("com.github.detro.ghostdriver:phantomjsdriver:1.1.0") {
		transitive = false
	}

	def plugins = [
		[name: 'tomcat', version: '7.0.55', scope: 'bootstrap'],
		[name: 'scaffolding', version: '2.1.2'],
		[name: 'cache', version: '1.1.8'],
		[name: 'asset-pipeline', version: '1.9.9'],
		[name: 'angular-template-asset-pipeline', version: '1.4.1'],
		[name: 'angular-annotate-asset-pipeline', version: '1.1.2'],
		[name: 'geb', version: gebVersion, scope: 'test']
	]

	plugins.each { plugin ->
		String scope = plugin.scope ?: 'compile'
		owner."$scope" "org.grails.plugins:${plugin.name}:${plugin.version}"
	}
	
	runtime('org.grails.plugins:hibernate4:4.3.6.1') {
    		exclude module: 'xml-apis'
	}

	compile "org.grails.plugins:twitter-bootstrap:3.2.0.2"

	// plugins needed at runtime but not for compilation
	//compile "org.grails.plugins:quartz:1.0-RC3"
	runtime "org.grails.plugins:database-migration:1.4.0"
	compile "org.grails.plugins:platform-core:1.0.0"
	compile "org.grails.plugins:quartz:1.0.2"
	compile "org.grails.plugins:mail:1.0.7"
	runtime "org.grails.plugins:jquery:1.11.1"
	compile "org.grails.plugins:jquery-ui:1.10.4"
	//compile "org.grails.plugins:spring-security-core:2.0-RC4"
    //compile "org.grails.plugins:spring-security-oauth2-provider:2.0-RC1"
	compile "org.grails.plugins:console:1.5.3"
	runtime "org.grails.plugins:cors:1.1.6"
	compile "io.swagger:swagger-core:1.5.3"
	compile "io.swagger:swagger-jaxrs:1.5.3"

}
